# Compiler toolchain for Cray EX Programming Environment GNU compiler (cpe-gnu)
easyblock = 'CrayPEToolchain'

name = 'cpeGNU'
version = '21.04'
versionsuffix = '-CSCS'

homepage = 'https://pubs.cray.com'
whatis = [
    "Desription: EasyBuild toolchain using the Cray compiler wrapper with gcc module (CPE release %(version)s)"
]

description = """
This module is the EasyBuild toolchain that uses the Cray compiler wrapper with
the gcc compiler activated. The components loaded are those of the Cray Programming
Environment (CPE) version %(version)s.

The result of this example is a modulefile which:
  * Unloads all PrgEnv modules except PrgEnv-gnu, and all cpe* modules except cpeGNU
  * Loads the PrgEnv-gnu module
  * Loads the targeting modules craype-x86-rome and craype-network-ofi
  * Loads the gcc module, even though PrgEnv-gnu is already loaded, because it is
    part of the dependencies
  * Loads the craype module, even though PrgEnv-gnu is already loaded, because it is
    part of the dependencies
  * Loads the dependencies in the order specified except for those three modules that
    have already been loaded.
  * Loads the cpe/21.04 module
  * Adds a line at the end of the module file (for implementing a hierarchy)

"""

toolchain = SYSTEM

CPE_load = 'last'

cray_targets = [
    'craype-x86-rome',
    'craype-network-ofi',
]

dependencies = [
   ('PrgEnv-gnu', EXTERNAL_MODULE),
   ('cray-dsmml', EXTERNAL_MODULE),
   ('cray-libsci', EXTERNAL_MODULE),
   ('cray-mpich', EXTERNAL_MODULE),
   ('craype', EXTERNAL_MODULE),
   ('gcc', EXTERNAL_MODULE),
   ('libfabric', EXTERNAL_MODULE),
   ('perftools-base', EXTERNAL_MODULE),
   ('xpmem', EXTERNAL_MODULE),
]

modluafooter = '''
prepend_path("MODULEPATH",root:gsub("software","modules/all/Toolchain"))
'''

moduleclass = 'toolchain'
#execute {cmd="ml restore PrgEnv-gnu",modeA={"load"}}
